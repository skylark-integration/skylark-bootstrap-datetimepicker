{"version":3,"sources":["skylark-bootstrap-datatimepicker.js"],"names":["define","skylark","$","moment","DateTimePicker","element","options","date","viewDate","input","use24Hours","actualFormat","parseFormats","currentViewMode","picker","unset","component","widget","minViewModeNumber","datePickerModes","clsName","navFnc","navStep","viewModes","verticalModes","horizontalModes","toolbarPlacements","keyMap","up","38","down","40","left","37","right","39","tab","9","escape","27","enter","13","pageUp","33","pageDown","34","shift","16","control","17","space","32","t","84","delete","46","keyState","hasTimeZone","undefined","tz","timeZone","getMoment","d","returnMoment","isDate","isMoment","useStrict","isEnabled","granularity","length","TypeError","indexOf","toLowerCase","hasTime","hasDate","getTimePickerTemplate","hoursView","addClass","append","minutesView","secondsView","ret","topRow","middleRow","bottomRow","attr","href","tabindex","title","tooltips","incrementHour","icons","data-time-component","pickHour","decrementHour","html","incrementMinute","pickMinute","decrementMinute","incrementSecond","pickSecond","decrementSecond","data-action","togglePeriod","getTimePickerMainTemplate","push","getTemplate","headTemplate","contTemplate","template","dateView","previous","calendarWeeks","next","clone","timeView","content","toolbar","collapse","row","showTodayButton","today","sideBySide","selectTime","time","showClear","clear","showClose","close","getToolbar","inline","removeClass","toolbarPlacement","place","parent","position","offset","vertical","widgetPositioning","horizontal","widgetParent","is","after","children","first","top","height","window","scrollTop","outerHeight","width","outerWidth","css","parents","filter","this","Error","bottom","notifyEvent","e","type","isSame","oldDate","trigger","viewUpdate","change","showMode","dir","Math","max","min","find","hide","show","isValid","targetMoment","disabledDates","testDate","format","enabledDates","isInEnabledDates","minDate","isBefore","maxDate","isAfter","daysOfWeekDisabled","day","disabledHours","isInDisabledHours","enabledHours","isInEnabledHours","disabledTimeIntervals","found","each","isBetween","fillDate","currentDate","i","daysView","daysViewHeader","clsNames","eq","prevMonth","selectMonth","nextMonth","text","dayViewHeaderFormat","subtract","add","startOf","weekday","week","classNames","join","empty","monthsView","monthsViewHeader","months","prevYear","selectYear","nextYear","year","month","index","updateMonths","yearsView","yearsViewHeader","startYear","endYear","prevDecade","selectDecade","nextDecade","updateYears","endDecadeYear","decadesView","decadesViewHeader","startDecade","y","endDecade","startedAt","minDateDecade","maxDateDecade","prevCentury","nextCentury","updateDecades","fillTime","toggle","newDate","timeComponents","hours","table","currentHour","hour","fillHours","currentMinute","step","stepping","minute","fillMinutes","currentSecond","second","fillSeconds","update","setValue","val","data","locale","minutes","round","seconds","keepInvalid","transitioning","collapseData","hasClass","toggleClass","off","remove","blur","parseInputDate","inputDate","Date","actions","pickerSwitch","target","closest","parseInt","selectDay","keepOpen","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","$this","$parent","expanded","closed","showPicker","showHours","showMinutes","showSeconds","selectHour","call","selectMinute","selectSecond","todaysDate","doAction","currentTarget","apply","arguments","currentMoment","prop","ignoreReadonly","trim","useCurrent","m","endOf","fillDow","spans","monthsShort","fillMonths","on","focusOnShow","focus","keydown","index2","keyBindKeys","allModifiersPressed","handler","pressedKeys","pressedModifiers","currentKey","which","hasOwnProperty","keyBinds","split","stopPropagation","preventDefault","keyup","parsedDate","stopImmediatePropagation","indexGivenDates","givenDatesArray","givenDatesIndexed","dDate","Object","keys","indexGivenHours","givenHoursArray","givenHoursIndexed","initFormatting","replace","formatInput","newinput","localeData","longDateFormat","formatInput2","extraFormats","slice","destroy","allowInputToggle","removeData","disable","enable","newOptions","extend","key","value","newFormat","newZone","formats","Array","dates","splice","reduce","previousValue","currentValue","isNaN","sort","tries","defaultDate","useCurrentOptions","viewMode","toString","debug","datepickerInput","eData","dataOptions","dateOptions","attributeName","charAt","toUpperCase","dataToOptions","fn","datetimepicker","returnValue","args","prototype","isInstance","_options","defaults","instance","inArray","control up","control down","control space","click","attach","main"],"mappings":"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","file":"../skylark-bootstrap-datatimepicker.js","sourcesContent":["define('skylark-bootstrap-datatimepicker/datetimepicker',[\n    \"skylark-langx/skylark\",\n    \"skylark-jquery\",\n    \"skylark-moment\"\n],function (skylark,$, moment) {\n\n    var DateTimePicker = function (element, options) {\n        var picker = {},\n            date,\n            viewDate,\n            unset = true,\n            input,\n            component = false,\n            widget = false,\n            use24Hours,\n            minViewModeNumber = 0,\n            actualFormat,\n            parseFormats,\n            currentViewMode,\n            datePickerModes = [\n                {\n                    clsName: 'days',\n                    navFnc: 'M',\n                    navStep: 1\n                },\n                {\n                    clsName: 'months',\n                    navFnc: 'y',\n                    navStep: 1\n                },\n                {\n                    clsName: 'years',\n                    navFnc: 'y',\n                    navStep: 10\n                },\n                {\n                    clsName: 'decades',\n                    navFnc: 'y',\n                    navStep: 100\n                }\n            ],\n            viewModes = ['days', 'months', 'years', 'decades'],\n            verticalModes = ['top', 'bottom', 'auto'],\n            horizontalModes = ['left', 'right', 'auto'],\n            toolbarPlacements = ['default', 'top', 'bottom'],\n            keyMap = {\n                'up': 38,\n                38: 'up',\n                'down': 40,\n                40: 'down',\n                'left': 37,\n                37: 'left',\n                'right': 39,\n                39: 'right',\n                'tab': 9,\n                9: 'tab',\n                'escape': 27,\n                27: 'escape',\n                'enter': 13,\n                13: 'enter',\n                'pageUp': 33,\n                33: 'pageUp',\n                'pageDown': 34,\n                34: 'pageDown',\n                'shift': 16,\n                16: 'shift',\n                'control': 17,\n                17: 'control',\n                'space': 32,\n                32: 'space',\n                't': 84,\n                84: 't',\n                'delete': 46,\n                46: 'delete'\n            },\n            keyState = {},\n\n            /********************************************************************************\n             *\n             * Private functions\n             *\n             ********************************************************************************/\n\n            hasTimeZone = function () {\n                return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';\n            },\n\n            getMoment = function (d) {\n                var returnMoment;\n\n                if (d === undefined || d === null) {\n                    returnMoment = moment(); //TODO should this use format? and locale?\n                } else if (moment.isDate(d) || moment.isMoment(d)) {\n                    // If the date that is passed in is already a Date() or moment() object,\n                    // pass it directly to moment.\n                    returnMoment = moment(d);\n                } else if (hasTimeZone()) { // There is a string to parse and a default time zone\n                    // parse with the tz function which takes a default time zone if it is not in the format string\n                    returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);\n                } else {\n                    returnMoment = moment(d, parseFormats, options.useStrict);\n                }\n\n                if (hasTimeZone()) {\n                    returnMoment.tz(options.timeZone);\n                }\n\n                return returnMoment;\n            },\n\n            isEnabled = function (granularity) {\n                if (typeof granularity !== 'string' || granularity.length > 1) {\n                    throw new TypeError('isEnabled expects a single character string parameter');\n                }\n                switch (granularity) {\n                    case 'y':\n                        return actualFormat.indexOf('Y') !== -1;\n                    case 'M':\n                        return actualFormat.indexOf('M') !== -1;\n                    case 'd':\n                        return actualFormat.toLowerCase().indexOf('d') !== -1;\n                    case 'h':\n                    case 'H':\n                        return actualFormat.toLowerCase().indexOf('h') !== -1;\n                    case 'm':\n                        return actualFormat.indexOf('m') !== -1;\n                    case 's':\n                        return actualFormat.indexOf('s') !== -1;\n                    default:\n                        return false;\n                }\n            },\n\n            hasTime = function () {\n                return (isEnabled('h') || isEnabled('m') || isEnabled('s'));\n            },\n\n            hasDate = function () {\n                return (isEnabled('y') || isEnabled('M') || isEnabled('d'));\n            },\n\n            getDatePickerTemplate = function () {\n                var headTemplate = $('<thead>')\n                        .append($('<tr>')\n                            .append($('<th>').addClass('prev').attr('data-action', 'previous')\n                                .append($('<span>').addClass(options.icons.previous))\n                                )\n                            .append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', (options.calendarWeeks ? '6' : '5')))\n                            .append($('<th>').addClass('next').attr('data-action', 'next')\n                                .append($('<span>').addClass(options.icons.next))\n                                )\n                            ),\n                    contTemplate = $('<tbody>')\n                        .append($('<tr>')\n                            .append($('<td>').attr('colspan', (options.calendarWeeks ? '8' : '7')))\n                            );\n\n                return [\n                    $('<div>').addClass('datepicker-days')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate)\n                            .append($('<tbody>'))\n                            ),\n                    $('<div>').addClass('datepicker-months')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-years')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-decades')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            )\n                ];\n            },\n\n            getTimePickerMainTemplate = function () {\n                var topRow = $('<tr>'),\n                    middleRow = $('<tr>'),\n                    bottomRow = $('<tr>');\n\n                if (isEnabled('h')) {\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementHour }).addClass('btn').attr('data-action', 'incrementHours').append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-hour').attr({ 'data-time-component': 'hours', 'title': options.tooltips.pickHour }).attr('data-action', 'showHours')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementHour }).addClass('btn').attr('data-action', 'decrementHours').append($('<span>').addClass(options.icons.down))));\n                }\n                if (isEnabled('m')) {\n                    if (isEnabled('h')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementMinute }).addClass('btn').attr('data-action', 'incrementMinutes')\n                            .append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-minute').attr({ 'data-time-component': 'minutes', 'title': options.tooltips.pickMinute }).attr('data-action', 'showMinutes')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementMinute }).addClass('btn').attr('data-action', 'decrementMinutes')\n                            .append($('<span>').addClass(options.icons.down))));\n                }\n                if (isEnabled('s')) {\n                    if (isEnabled('m')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementSecond }).addClass('btn').attr('data-action', 'incrementSeconds')\n                            .append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-second').attr({ 'data-time-component': 'seconds', 'title': options.tooltips.pickSecond }).attr('data-action', 'showSeconds')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementSecond }).addClass('btn').attr('data-action', 'decrementSeconds')\n                            .append($('<span>').addClass(options.icons.down))));\n                }\n\n                if (!use24Hours) {\n                    topRow.append($('<td>').addClass('separator'));\n                    middleRow.append($('<td>')\n                        .append($('<button>').addClass('btn btn-primary').attr({ 'data-action': 'togglePeriod', tabindex: '-1', 'title': options.tooltips.togglePeriod })));\n                    bottomRow.append($('<td>').addClass('separator'));\n                }\n\n                return $('<div>').addClass('timepicker-picker')\n                    .append($('<table>').addClass('table-condensed')\n                        .append([topRow, middleRow, bottomRow]));\n            },\n\n            getTimePickerTemplate = function () {\n                var hoursView = $('<div>').addClass('timepicker-hours')\n                        .append($('<table>').addClass('table-condensed')),\n                    minutesView = $('<div>').addClass('timepicker-minutes')\n                        .append($('<table>').addClass('table-condensed')),\n                    secondsView = $('<div>').addClass('timepicker-seconds')\n                        .append($('<table>').addClass('table-condensed')),\n                    ret = [getTimePickerMainTemplate()];\n\n                if (isEnabled('h')) {\n                    ret.push(hoursView);\n                }\n                if (isEnabled('m')) {\n                    ret.push(minutesView);\n                }\n                if (isEnabled('s')) {\n                    ret.push(secondsView);\n                }\n\n                return ret;\n            },\n\n            getToolbar = function () {\n                var row = [];\n                if (options.showTodayButton) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'today', 'title': options.tooltips.today }).append($('<span>').addClass(options.icons.today))));\n                }\n                if (!options.sideBySide && hasDate() && hasTime()) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'togglePicker', 'title': options.tooltips.selectTime }).append($('<span>').addClass(options.icons.time))));\n                }\n                if (options.showClear) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'clear', 'title': options.tooltips.clear }).append($('<span>').addClass(options.icons.clear))));\n                }\n                if (options.showClose) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'close', 'title': options.tooltips.close }).append($('<span>').addClass(options.icons.close))));\n                }\n                return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));\n            },\n\n            getTemplate = function () {\n                var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu'),\n                    dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate()),\n                    timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate()),\n                    content = $('<ul>').addClass('list-unstyled'),\n                    toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());\n\n                if (options.inline) {\n                    template.removeClass('dropdown-menu');\n                }\n\n                if (use24Hours) {\n                    template.addClass('usetwentyfour');\n                }\n\n                if (isEnabled('s') && !use24Hours) {\n                    template.addClass('wider');\n                }\n\n                if (options.sideBySide && hasDate() && hasTime()) {\n                    template.addClass('timepicker-sbs');\n                    if (options.toolbarPlacement === 'top') {\n                        template.append(toolbar);\n                    }\n                    template.append(\n                        $('<div>').addClass('row')\n                            .append(dateView.addClass('col-md-6'))\n                            .append(timeView.addClass('col-md-6'))\n                    );\n                    if (options.toolbarPlacement === 'bottom') {\n                        template.append(toolbar);\n                    }\n                    return template;\n                }\n\n                if (options.toolbarPlacement === 'top') {\n                    content.append(toolbar);\n                }\n                if (hasDate()) {\n                    content.append($('<li>').addClass((options.collapse && hasTime() ? 'collapse in' : '')).append(dateView));\n                }\n                if (options.toolbarPlacement === 'default') {\n                    content.append(toolbar);\n                }\n                if (hasTime()) {\n                    content.append($('<li>').addClass((options.collapse && hasDate() ? 'collapse' : '')).append(timeView));\n                }\n                if (options.toolbarPlacement === 'bottom') {\n                    content.append(toolbar);\n                }\n                return template.append(content);\n            },\n\n            dataToOptions = function () {\n                var eData,\n                    dataOptions = {};\n\n                if (element.is('input') || options.inline) {\n                    eData = element.data();\n                } else {\n                    eData = element.find('input').data();\n                }\n\n                if (eData.dateOptions && eData.dateOptions instanceof Object) {\n                    dataOptions = $.extend(true, dataOptions, eData.dateOptions);\n                }\n\n                $.each(options, function (key) {\n                    var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);\n                    if (eData[attributeName] !== undefined) {\n                        dataOptions[key] = eData[attributeName];\n                    }\n                });\n                return dataOptions;\n            },\n\n            place = function () {\n                var position = (component || element).position(),\n                    offset = (component || element).offset(),\n                    vertical = options.widgetPositioning.vertical,\n                    horizontal = options.widgetPositioning.horizontal,\n                    parent;\n\n                if (options.widgetParent) {\n                    parent = options.widgetParent.append(widget);\n                } else if (element.is('input')) {\n                    parent = element.after(widget).parent();\n                } else if (options.inline) {\n                    parent = element.append(widget);\n                    return;\n                } else {\n                    parent = element;\n                    element.children().first().after(widget);\n                }\n\n                // Top and bottom logic\n                if (vertical === 'auto') {\n                    if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() &&\n                        widget.height() + element.outerHeight() < offset.top) {\n                        vertical = 'top';\n                    } else {\n                        vertical = 'bottom';\n                    }\n                }\n\n                // Left and right logic\n                if (horizontal === 'auto') {\n                    if (parent.width() < offset.left + widget.outerWidth() / 2 &&\n                        offset.left + widget.outerWidth() > $(window).width()) {\n                        horizontal = 'right';\n                    } else {\n                        horizontal = 'left';\n                    }\n                }\n\n                if (vertical === 'top') {\n                    widget.addClass('top').removeClass('bottom');\n                } else {\n                    widget.addClass('bottom').removeClass('top');\n                }\n\n                if (horizontal === 'right') {\n                    widget.addClass('pull-right');\n                } else {\n                    widget.removeClass('pull-right');\n                }\n\n                // find the first parent element that has a non-static css positioning\n                if (parent.css('position') === 'static') {\n                    parent = parent.parents().filter(function () {\n                        return $(this).css('position') !== 'static';\n                    }).first();\n                }\n\n                if (parent.length === 0) {\n                    throw new Error('datetimepicker component should be placed within a non-static positioned container');\n                }\n\n                widget.css({\n                    top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),\n                    bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',\n                    left: horizontal === 'left' ? (parent === element ? 0 : position.left) : 'auto',\n                    right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)\n                });\n            },\n\n            notifyEvent = function (e) {\n                if (e.type === 'dp.change' && ((e.date && e.date.isSame(e.oldDate)) || (!e.date && !e.oldDate))) {\n                    return;\n                }\n                element.trigger(e);\n            },\n\n            viewUpdate = function (e) {\n                if (e === 'y') {\n                    e = 'YYYY';\n                }\n                notifyEvent({\n                    type: 'dp.update',\n                    change: e,\n                    viewDate: viewDate.clone()\n                });\n            },\n\n            showMode = function (dir) {\n                if (!widget) {\n                    return;\n                }\n                if (dir) {\n                    currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));\n                }\n                widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();\n            },\n\n            fillDow = function () {\n                var row = $('<tr>'),\n                    currentDate = viewDate.clone().startOf('w').startOf('d');\n\n                if (options.calendarWeeks === true) {\n                    row.append($('<th>').addClass('cw').text('#'));\n                }\n\n                while (currentDate.isBefore(viewDate.clone().endOf('w'))) {\n                    row.append($('<th>').addClass('dow').text(currentDate.format('dd')));\n                    currentDate.add(1, 'd');\n                }\n                widget.find('.datepicker-days thead').append(row);\n            },\n\n            isInDisabledDates = function (testDate) {\n                return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInEnabledDates = function (testDate) {\n                return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInDisabledHours = function (testDate) {\n                return options.disabledHours[testDate.format('H')] === true;\n            },\n\n            isInEnabledHours = function (testDate) {\n                return options.enabledHours[testDate.format('H')] === true;\n            },\n\n            isValid = function (targetMoment, granularity) {\n                if (!targetMoment.isValid()) {\n                    return false;\n                }\n                if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {\n                    return false;\n                }\n                if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {\n                    return false;\n                }\n                if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {\n                    return false;\n                }\n                if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {\n                    var found = false;\n                    $.each(options.disabledTimeIntervals, function () {\n                        if (targetMoment.isBetween(this[0], this[1])) {\n                            found = true;\n                            return false;\n                        }\n                    });\n                    if (found) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n\n            fillMonths = function () {\n                var spans = [],\n                    monthsShort = viewDate.clone().startOf('y').startOf('d');\n                while (monthsShort.isSame(viewDate, 'y')) {\n                    spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));\n                    monthsShort.add(1, 'M');\n                }\n                widget.find('.datepicker-months td').empty().append(spans);\n            },\n\n            updateMonths = function () {\n                var monthsView = widget.find('.datepicker-months'),\n                    monthsViewHeader = monthsView.find('th'),\n                    months = monthsView.find('tbody').find('span');\n\n                monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);\n                monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);\n                monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);\n\n                monthsView.find('.disabled').removeClass('disabled');\n\n                if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(0).addClass('disabled');\n                }\n\n                monthsViewHeader.eq(1).text(viewDate.year());\n\n                if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(2).addClass('disabled');\n                }\n\n                months.removeClass('active');\n                if (date.isSame(viewDate, 'y') && !unset) {\n                    months.eq(date.month()).addClass('active');\n                }\n\n                months.each(function (index) {\n                    if (!isValid(viewDate.clone().month(index), 'M')) {\n                        $(this).addClass('disabled');\n                    }\n                });\n            },\n\n            updateYears = function () {\n                var yearsView = widget.find('.datepicker-years'),\n                    yearsViewHeader = yearsView.find('th'),\n                    startYear = viewDate.clone().subtract(5, 'y'),\n                    endYear = viewDate.clone().add(6, 'y'),\n                    html = '';\n\n                yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);\n                yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);\n                yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);\n\n                yearsView.find('.disabled').removeClass('disabled');\n\n                if (options.minDate && options.minDate.isAfter(startYear, 'y')) {\n                    yearsViewHeader.eq(0).addClass('disabled');\n                }\n\n                yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());\n\n                if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {\n                    yearsViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startYear.isAfter(endYear, 'y')) {\n                    html += '<span data-action=\"selectYear\" class=\"year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '\">' + startYear.year() + '</span>';\n                    startYear.add(1, 'y');\n                }\n\n                yearsView.find('td').html(html);\n            },\n\n            updateDecades = function () {\n                var decadesView = widget.find('.datepicker-decades'),\n                    decadesViewHeader = decadesView.find('th'),\n                    startDecade = moment({ y: viewDate.year() - (viewDate.year() % 100) - 1 }),\n                    endDecade = startDecade.clone().add(100, 'y'),\n                    startedAt = startDecade.clone(),\n                    minDateDecade = false,\n                    maxDateDecade = false,\n                    endDecadeYear,\n                    html = '';\n\n                decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);\n                decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);\n\n                decadesView.find('.disabled').removeClass('disabled');\n\n                if (startDecade.isSame(moment({ y: 1900 })) || (options.minDate && options.minDate.isAfter(startDecade, 'y'))) {\n                    decadesViewHeader.eq(0).addClass('disabled');\n                }\n\n                decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());\n\n                if (startDecade.isSame(moment({ y: 2000 })) || (options.maxDate && options.maxDate.isBefore(endDecade, 'y'))) {\n                    decadesViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startDecade.isAfter(endDecade, 'y')) {\n                    endDecadeYear = startDecade.year() + 12;\n                    minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;\n                    maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;\n                    html += '<span data-action=\"selectDecade\" class=\"decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') +\n                        (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '\" data-selection=\"' + (startDecade.year() + 6) + '\">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';\n                    startDecade.add(12, 'y');\n                }\n                html += '<span></span><span></span><span></span>'; //push the dangling block over, at least this way it's even\n\n                decadesView.find('td').html(html);\n                decadesViewHeader.eq(1).text((startedAt.year() + 1) + '-' + (startDecade.year()));\n            },\n\n            fillDate = function () {\n                var daysView = widget.find('.datepicker-days'),\n                    daysViewHeader = daysView.find('th'),\n                    currentDate,\n                    html = [],\n                    row,\n                    clsNames = [],\n                    i;\n\n                if (!hasDate()) {\n                    return;\n                }\n\n                daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);\n                daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);\n                daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);\n\n                daysView.find('.disabled').removeClass('disabled');\n                daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));\n\n                if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {\n                    daysViewHeader.eq(0).addClass('disabled');\n                }\n                if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {\n                    daysViewHeader.eq(2).addClass('disabled');\n                }\n\n                currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');\n\n                for (i = 0; i < 42; i++) { //always display 42 days (should show 6 weeks)\n                    if (currentDate.weekday() === 0) {\n                        row = $('<tr>');\n                        if (options.calendarWeeks) {\n                            row.append('<td class=\"cw\">' + currentDate.week() + '</td>');\n                        }\n                        html.push(row);\n                    }\n                    clsNames = ['day'];\n                    if (currentDate.isBefore(viewDate, 'M')) {\n                        clsNames.push('old');\n                    }\n                    if (currentDate.isAfter(viewDate, 'M')) {\n                        clsNames.push('new');\n                    }\n                    if (currentDate.isSame(date, 'd') && !unset) {\n                        clsNames.push('active');\n                    }\n                    if (!isValid(currentDate, 'd')) {\n                        clsNames.push('disabled');\n                    }\n                    if (currentDate.isSame(getMoment(), 'd')) {\n                        clsNames.push('today');\n                    }\n                    if (currentDate.day() === 0 || currentDate.day() === 6) {\n                        clsNames.push('weekend');\n                    }\n                    notifyEvent({\n                        type: 'dp.classify',\n                        date: currentDate,\n                        classNames: clsNames\n                    });\n                    row.append('<td data-action=\"selectDay\" data-day=\"' + currentDate.format('L') + '\" class=\"' + clsNames.join(' ') + '\">' + currentDate.date() + '</td>');\n                    currentDate.add(1, 'd');\n                }\n\n                daysView.find('tbody').empty().append(html);\n\n                updateMonths();\n\n                updateYears();\n\n                updateDecades();\n            },\n\n            fillHours = function () {\n                var table = widget.find('.timepicker-hours table'),\n                    currentHour = viewDate.clone().startOf('d'),\n                    html = [],\n                    row = $('<tr>');\n\n                if (viewDate.hour() > 11 && !use24Hours) {\n                    currentHour.hour(12);\n                }\n                while (currentHour.isSame(viewDate, 'd') && (use24Hours || (viewDate.hour() < 12 && currentHour.hour() < 12) || viewDate.hour() > 11)) {\n                    if (currentHour.hour() % 4 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectHour\" class=\"hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '\">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');\n                    currentHour.add(1, 'h');\n                }\n                table.empty().append(html);\n            },\n\n            fillMinutes = function () {\n                var table = widget.find('.timepicker-minutes table'),\n                    currentMinute = viewDate.clone().startOf('h'),\n                    html = [],\n                    row = $('<tr>'),\n                    step = options.stepping === 1 ? 5 : options.stepping;\n\n                while (viewDate.isSame(currentMinute, 'h')) {\n                    if (currentMinute.minute() % (step * 4) === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectMinute\" class=\"minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '\">' + currentMinute.format('mm') + '</td>');\n                    currentMinute.add(step, 'm');\n                }\n                table.empty().append(html);\n            },\n\n            fillSeconds = function () {\n                var table = widget.find('.timepicker-seconds table'),\n                    currentSecond = viewDate.clone().startOf('m'),\n                    html = [],\n                    row = $('<tr>');\n\n                while (viewDate.isSame(currentSecond, 'm')) {\n                    if (currentSecond.second() % 20 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectSecond\" class=\"second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '\">' + currentSecond.format('ss') + '</td>');\n                    currentSecond.add(5, 's');\n                }\n\n                table.empty().append(html);\n            },\n\n            fillTime = function () {\n                var toggle, newDate, timeComponents = widget.find('.timepicker span[data-time-component]');\n\n                if (!use24Hours) {\n                    toggle = widget.find('.timepicker [data-action=togglePeriod]');\n                    newDate = date.clone().add((date.hours() >= 12) ? -12 : 12, 'h');\n\n                    toggle.text(date.format('A'));\n\n                    if (isValid(newDate, 'h')) {\n                        toggle.removeClass('disabled');\n                    } else {\n                        toggle.addClass('disabled');\n                    }\n                }\n                timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));\n                timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));\n                timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));\n\n                fillHours();\n                fillMinutes();\n                fillSeconds();\n            },\n\n            update = function () {\n                if (!widget) {\n                    return;\n                }\n                fillDate();\n                fillTime();\n            },\n\n            setValue = function (targetMoment) {\n                var oldDate = unset ? null : date;\n\n                // case of calling setValue(null or false)\n                if (!targetMoment) {\n                    unset = true;\n                    input.val('');\n                    element.data('date', '');\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: false,\n                        oldDate: oldDate\n                    });\n                    update();\n                    return;\n                }\n\n                targetMoment = targetMoment.clone().locale(options.locale);\n\n                if (hasTimeZone()) {\n                    targetMoment.tz(options.timeZone);\n                }\n\n                if (options.stepping !== 1) {\n                    targetMoment.minutes((Math.round(targetMoment.minutes() / options.stepping) * options.stepping)).seconds(0);\n\n                    while (options.minDate && targetMoment.isBefore(options.minDate)) {\n                        targetMoment.add(options.stepping, 'minutes');\n                    }\n                }\n\n                if (isValid(targetMoment)) {\n                    date = targetMoment;\n                    viewDate = date.clone();\n                    input.val(date.format(actualFormat));\n                    element.data('date', date.format(actualFormat));\n                    unset = false;\n                    update();\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: date.clone(),\n                        oldDate: oldDate\n                    });\n                } else {\n                    if (!options.keepInvalid) {\n                        input.val(unset ? '' : date.format(actualFormat));\n                    } else {\n                        notifyEvent({\n                            type: 'dp.change',\n                            date: targetMoment,\n                            oldDate: oldDate\n                        });\n                    }\n                    notifyEvent({\n                        type: 'dp.error',\n                        date: targetMoment,\n                        oldDate: oldDate\n                    });\n                }\n            },\n\n            /**\n             * Hides the widget. Possibly will emit dp.hide\n             */\n            hide = function () {\n                var transitioning = false;\n                if (!widget) {\n                    return picker;\n                }\n                // Ignore event if in the middle of a picker transition\n                widget.find('.collapse').each(function () {\n                    var collapseData = $(this).data('collapse');\n                    if (collapseData && collapseData.transitioning) {\n                        transitioning = true;\n                        return false;\n                    }\n                    return true;\n                });\n                if (transitioning) {\n                    return picker;\n                }\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                widget.hide();\n\n                $(window).off('resize', place);\n                widget.off('click', '[data-action]');\n                widget.off('mousedown', false);\n\n                widget.remove();\n                widget = false;\n\n                notifyEvent({\n                    type: 'dp.hide',\n                    date: date.clone()\n                });\n\n                input.blur();\n\n                currentViewMode = 0;\n                viewDate = date.clone();\n\n                return picker;\n            },\n\n            clear = function () {\n                setValue(null);\n            },\n\n            parseInputDate = function (inputDate) {\n                if (options.parseInputDate === undefined) {\n                    if (!moment.isMoment(inputDate) || inputDate instanceof Date) {\n                        inputDate = getMoment(inputDate);\n                    }\n                } else {\n                    inputDate = options.parseInputDate(inputDate);\n                }\n                //inputDate.locale(options.locale);\n                return inputDate;\n            },\n\n            /********************************************************************************\n             *\n             * Widget UI interaction functions\n             *\n             ********************************************************************************/\n            actions = {\n                next: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                previous: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                pickerSwitch: function () {\n                    showMode(1);\n                },\n\n                selectMonth: function (e) {\n                    var month = $(e.target).closest('tbody').find('span').index($(e.target));\n                    viewDate.month(month);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()).month(viewDate.month()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('M');\n                },\n\n                selectYear: function (e) {\n                    var year = parseInt($(e.target).text(), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDecade: function (e) {\n                    var year = parseInt($(e.target).data('selection'), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDay: function (e) {\n                    var day = viewDate.clone();\n                    if ($(e.target).is('.old')) {\n                        day.subtract(1, 'M');\n                    }\n                    if ($(e.target).is('.new')) {\n                        day.add(1, 'M');\n                    }\n                    setValue(day.date(parseInt($(e.target).text(), 10)));\n                    if (!hasTime() && !options.keepOpen && !options.inline) {\n                        hide();\n                    }\n                },\n\n                incrementHours: function () {\n                    var newDate = date.clone().add(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementMinutes: function () {\n                    var newDate = date.clone().add(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementSeconds: function () {\n                    var newDate = date.clone().add(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementHours: function () {\n                    var newDate = date.clone().subtract(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementMinutes: function () {\n                    var newDate = date.clone().subtract(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementSeconds: function () {\n                    var newDate = date.clone().subtract(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                togglePeriod: function () {\n                    setValue(date.clone().add((date.hours() >= 12) ? -12 : 12, 'h'));\n                },\n\n                togglePicker: function (e) {\n                    var $this = $(e.target),\n                        $parent = $this.closest('ul'),\n                        expanded = $parent.find('.in'),\n                        closed = $parent.find('.collapse:not(.in)'),\n                        collapseData;\n\n                    if (expanded && expanded.length) {\n                        collapseData = expanded.data('collapse');\n                        if (collapseData && collapseData.transitioning) {\n                            return;\n                        }\n                        if (expanded.collapse) { // if collapse plugin is available through bootstrap.js then use it\n                            expanded.collapse('hide');\n                            closed.collapse('show');\n                        } else { // otherwise just toggle in class on the two views\n                            expanded.removeClass('in');\n                            closed.addClass('in');\n                        }\n                        if ($this.is('span')) {\n                            $this.toggleClass(options.icons.time + ' ' + options.icons.date);\n                        } else {\n                            $this.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        }\n\n                        // NOTE: uncomment if toggled state will be restored in show()\n                        //if (component) {\n                        //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        //}\n                    }\n                },\n\n                showPicker: function () {\n                    widget.find('.timepicker > div:not(.timepicker-picker)').hide();\n                    widget.find('.timepicker .timepicker-picker').show();\n                },\n\n                showHours: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-hours').show();\n                },\n\n                showMinutes: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-minutes').show();\n                },\n\n                showSeconds: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-seconds').show();\n                },\n\n                selectHour: function (e) {\n                    var hour = parseInt($(e.target).text(), 10);\n\n                    if (!use24Hours) {\n                        if (date.hours() >= 12) {\n                            if (hour !== 12) {\n                                hour += 12;\n                            }\n                        } else {\n                            if (hour === 12) {\n                                hour = 0;\n                            }\n                        }\n                    }\n                    setValue(date.clone().hours(hour));\n                    actions.showPicker.call(picker);\n                },\n\n                selectMinute: function (e) {\n                    setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                selectSecond: function (e) {\n                    setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                clear: clear,\n\n                today: function () {\n                    var todaysDate = getMoment();\n                    if (isValid(todaysDate, 'd')) {\n                        setValue(todaysDate);\n                    }\n                },\n\n                close: hide\n            },\n\n            doAction = function (e) {\n                if ($(e.currentTarget).is('.disabled')) {\n                    return false;\n                }\n                actions[$(e.currentTarget).data('action')].apply(picker, arguments);\n                return false;\n            },\n\n            /**\n             * Shows the widget. Possibly will emit dp.show and dp.change\n             */\n            show = function () {\n                var currentMoment,\n                    useCurrentGranularity = {\n                        'year': function (m) {\n                            return m.month(0).date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'month': function (m) {\n                            return m.date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'day': function (m) {\n                            return m.hours(0).seconds(0).minutes(0);\n                        },\n                        'hour': function (m) {\n                            return m.seconds(0).minutes(0);\n                        },\n                        'minute': function (m) {\n                            return m.seconds(0);\n                        }\n                    };\n\n                if (input.prop('disabled') || (!options.ignoreReadonly && input.prop('readonly')) || widget) {\n                    return picker;\n                }\n                if (input.val() !== undefined && input.val().trim().length !== 0) {\n                    setValue(parseInputDate(input.val().trim()));\n                } else if (unset && options.useCurrent && (options.inline || (input.is('input') && input.val().trim().length === 0))) {\n                    currentMoment = getMoment();\n                    if (typeof options.useCurrent === 'string') {\n                        currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);\n                    }\n                    setValue(currentMoment);\n                }\n                widget = getTemplate();\n\n                fillDow();\n                fillMonths();\n\n                widget.find('.timepicker-hours').hide();\n                widget.find('.timepicker-minutes').hide();\n                widget.find('.timepicker-seconds').hide();\n\n                update();\n                showMode();\n\n                $(window).on('resize', place);\n                widget.on('click', '[data-action]', doAction); // this handles clicks on the widget\n                widget.on('mousedown', false);\n\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                place();\n                widget.show();\n                if (options.focusOnShow && !input.is(':focus')) {\n                    input.focus();\n                }\n\n                notifyEvent({\n                    type: 'dp.show'\n                });\n                return picker;\n            },\n\n            /**\n             * Shows or hides the widget\n             */\n            toggle = function () {\n                return (widget ? hide() : show());\n            },\n\n            keydown = function (e) {\n                var handler = null,\n                    index,\n                    index2,\n                    pressedKeys = [],\n                    pressedModifiers = {},\n                    currentKey = e.which,\n                    keyBindKeys,\n                    allModifiersPressed,\n                    pressed = 'p';\n\n                keyState[currentKey] = pressed;\n\n                for (index in keyState) {\n                    if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {\n                        pressedKeys.push(index);\n                        if (parseInt(index, 10) !== currentKey) {\n                            pressedModifiers[index] = true;\n                        }\n                    }\n                }\n\n                for (index in options.keyBinds) {\n                    if (options.keyBinds.hasOwnProperty(index) && typeof (options.keyBinds[index]) === 'function') {\n                        keyBindKeys = index.split(' ');\n                        if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {\n                            allModifiersPressed = true;\n                            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {\n                                if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {\n                                    allModifiersPressed = false;\n                                    break;\n                                }\n                            }\n                            if (allModifiersPressed) {\n                                handler = options.keyBinds[index];\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (handler) {\n                    handler.call(picker, widget);\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            },\n\n            keyup = function (e) {\n                keyState[e.which] = 'r';\n                e.stopPropagation();\n                e.preventDefault();\n            },\n\n            change = function (e) {\n                var val = $(e.target).val().trim(),\n                    parsedDate = val ? parseInputDate(val) : null;\n                setValue(parsedDate);\n                e.stopImmediatePropagation();\n                return false;\n            },\n\n            attachDatePickerElementEvents = function () {\n                input.on({\n                    'change': change,\n                    'blur': options.debug ? '' : hide,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? show : ''\n                });\n\n                if (element.is('input')) {\n                    input.on({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.on('click', toggle);\n                    component.on('mousedown', false);\n                }\n            },\n\n            detachDatePickerElementEvents = function () {\n                input.off({\n                    'change': change,\n                    'blur': blur,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? hide : ''\n                });\n\n                if (element.is('input')) {\n                    input.off({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.off('click', toggle);\n                    component.off('mousedown', false);\n                }\n            },\n\n            indexGivenDates = function (givenDatesArray) {\n                // Store given enabledDates and disabledDates as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledDates['2014-02-27'] === true)\n                var givenDatesIndexed = {};\n                $.each(givenDatesArray, function () {\n                    var dDate = parseInputDate(this);\n                    if (dDate.isValid()) {\n                        givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\n                    }\n                });\n                return (Object.keys(givenDatesIndexed).length) ? givenDatesIndexed : false;\n            },\n\n            indexGivenHours = function (givenHoursArray) {\n                // Store given enabledHours and disabledHours as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledHours['2014-02-27'] === true)\n                var givenHoursIndexed = {};\n                $.each(givenHoursArray, function () {\n                    givenHoursIndexed[this] = true;\n                });\n                return (Object.keys(givenHoursIndexed).length) ? givenHoursIndexed : false;\n            },\n\n            initFormatting = function () {\n                var format = options.format || 'L LT';\n\n                actualFormat = format.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {\n                    var newinput = date.localeData().longDateFormat(formatInput) || formatInput;\n                    return newinput.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) { //temp fix for #740\n                        return date.localeData().longDateFormat(formatInput2) || formatInput2;\n                    });\n                });\n\n\n                parseFormats = options.extraFormats ? options.extraFormats.slice() : [];\n                if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {\n                    parseFormats.push(actualFormat);\n                }\n\n                use24Hours = (actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\\[.*?\\]/g, '').indexOf('h') < 1);\n\n                if (isEnabled('y')) {\n                    minViewModeNumber = 2;\n                }\n                if (isEnabled('M')) {\n                    minViewModeNumber = 1;\n                }\n                if (isEnabled('d')) {\n                    minViewModeNumber = 0;\n                }\n\n                currentViewMode = Math.max(minViewModeNumber, currentViewMode);\n\n                if (!unset) {\n                    setValue(date);\n                }\n            };\n\n        /********************************************************************************\n         *\n         * Public API functions\n         * =====================\n         *\n         * Important: Do not expose direct references to private objects or the options\n         * object to the outer world. Always return a clone when returning values or make\n         * a clone when setting a private variable.\n         *\n         ********************************************************************************/\n        picker.destroy = function () {\n            ///<summary>Destroys the widget and removes all attached event listeners</summary>\n            hide();\n            detachDatePickerElementEvents();\n            element.removeData('DateTimePicker');\n            element.removeData('date');\n        };\n\n        picker.toggle = toggle;\n\n        picker.show = show;\n\n        picker.hide = hide;\n\n        picker.disable = function () {\n            ///<summary>Disables the input element, the component is attached to, by adding a disabled=\"true\" attribute to it.\n            ///If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>\n            hide();\n            if (component && component.hasClass('btn')) {\n                component.addClass('disabled');\n            }\n            input.prop('disabled', true);\n            return picker;\n        };\n\n        picker.enable = function () {\n            ///<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>\n            if (component && component.hasClass('btn')) {\n                component.removeClass('disabled');\n            }\n            input.prop('disabled', false);\n            return picker;\n        };\n\n        picker.ignoreReadonly = function (ignoreReadonly) {\n            if (arguments.length === 0) {\n                return options.ignoreReadonly;\n            }\n            if (typeof ignoreReadonly !== 'boolean') {\n                throw new TypeError('ignoreReadonly () expects a boolean parameter');\n            }\n            options.ignoreReadonly = ignoreReadonly;\n            return picker;\n        };\n\n        picker.options = function (newOptions) {\n            if (arguments.length === 0) {\n                return $.extend(true, {}, options);\n            }\n\n            if (!(newOptions instanceof Object)) {\n                throw new TypeError('options() options parameter should be an object');\n            }\n            $.extend(true, options, newOptions);\n            $.each(options, function (key, value) {\n                if (picker[key] !== undefined) {\n                    picker[key](value);\n                } else {\n                    throw new TypeError('option ' + key + ' is not recognized!');\n                }\n            });\n            return picker;\n        };\n\n        picker.date = function (newDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.date\">\n            ///<summary>Returns the component's model current date, a moment object or null if not set.</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>\n            ///<param name=\"newDate\" locid=\"$.fn.datetimepicker.date_p:newDate\">Takes string, Date, moment, null parameter.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                if (unset) {\n                    return null;\n                }\n                return date.clone();\n            }\n\n            if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('date() parameter must be one of [null, string, moment or Date]');\n            }\n\n            setValue(newDate === null ? null : parseInputDate(newDate));\n            return picker;\n        };\n\n        picker.format = function (newFormat) {\n            ///<summary>test su</summary>\n            ///<param name=\"newFormat\">info about para</param>\n            ///<returns type=\"string|boolean\">returns foo</returns>\n            if (arguments.length === 0) {\n                return options.format;\n            }\n\n            if ((typeof newFormat !== 'string') && ((typeof newFormat !== 'boolean') || (newFormat !== false))) {\n                throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);\n            }\n\n            options.format = newFormat;\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.timeZone = function (newZone) {\n            if (arguments.length === 0) {\n                return options.timeZone;\n            }\n\n            if (typeof newZone !== 'string') {\n                throw new TypeError('newZone() expects a string parameter');\n            }\n\n            options.timeZone = newZone;\n\n            return picker;\n        };\n\n        picker.dayViewHeaderFormat = function (newFormat) {\n            if (arguments.length === 0) {\n                return options.dayViewHeaderFormat;\n            }\n\n            if (typeof newFormat !== 'string') {\n                throw new TypeError('dayViewHeaderFormat() expects a string parameter');\n            }\n\n            options.dayViewHeaderFormat = newFormat;\n            return picker;\n        };\n\n        picker.extraFormats = function (formats) {\n            if (arguments.length === 0) {\n                return options.extraFormats;\n            }\n\n            if (formats !== false && !(formats instanceof Array)) {\n                throw new TypeError('extraFormats() expects an array or false parameter');\n            }\n\n            options.extraFormats = formats;\n            if (parseFormats) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.disabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledDates\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates);\n            }\n\n            if (!dates) {\n                options.disabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('disabledDates() expects an array parameter');\n            }\n            options.disabledDates = indexGivenDates(dates);\n            options.enabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.enabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledDates\">\n            ///<summary>Returns an array with the currently set enabled dates on the component.</summary>\n            ///<returns type=\"array\">options.enabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.enabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates);\n            }\n\n            if (!dates) {\n                options.enabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('enabledDates() expects an array parameter');\n            }\n            options.enabledDates = indexGivenDates(dates);\n            options.disabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {\n            if (arguments.length === 0) {\n                return options.daysOfWeekDisabled.splice(0);\n            }\n\n            if ((typeof daysOfWeekDisabled === 'boolean') && !daysOfWeekDisabled) {\n                options.daysOfWeekDisabled = false;\n                update();\n                return picker;\n            }\n\n            if (!(daysOfWeekDisabled instanceof Array)) {\n                throw new TypeError('daysOfWeekDisabled() expects an array parameter');\n            }\n            options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {\n                currentValue = parseInt(currentValue, 10);\n                if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {\n                    return previousValue;\n                }\n                if (previousValue.indexOf(currentValue) === -1) {\n                    previousValue.push(currentValue);\n                }\n                return previousValue;\n            }, []).sort();\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'd')) {\n                    date.add(1, 'd');\n                    if (tries === 31) {\n                        throw 'Tried 31 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.maxDate = function (maxDate) {\n            if (arguments.length === 0) {\n                return options.maxDate ? options.maxDate.clone() : options.maxDate;\n            }\n\n            if ((typeof maxDate === 'boolean') && maxDate === false) {\n                options.maxDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof maxDate === 'string') {\n                if (maxDate === 'now' || maxDate === 'moment') {\n                    maxDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(maxDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);\n            }\n            if (options.minDate && parsedDate.isBefore(options.minDate)) {\n                throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));\n            }\n            options.maxDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {\n                setValue(options.maxDate);\n            }\n            if (viewDate.isAfter(parsedDate)) {\n                viewDate = parsedDate.clone().subtract(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.minDate = function (minDate) {\n            if (arguments.length === 0) {\n                return options.minDate ? options.minDate.clone() : options.minDate;\n            }\n\n            if ((typeof minDate === 'boolean') && minDate === false) {\n                options.minDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof minDate === 'string') {\n                if (minDate === 'now' || minDate === 'moment') {\n                    minDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(minDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('minDate() Could not parse date parameter: ' + minDate);\n            }\n            if (options.maxDate && parsedDate.isAfter(options.maxDate)) {\n                throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));\n            }\n            options.minDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {\n                setValue(options.minDate);\n            }\n            if (viewDate.isBefore(parsedDate)) {\n                viewDate = parsedDate.clone().add(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.defaultDate = function (defaultDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.defaultDate\">\n            ///<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>\n            ///<param name=\"defaultDate\" locid=\"$.fn.datetimepicker.defaultDate_p:defaultDate\">Takes a string, Date, moment, boolean:false</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;\n            }\n            if (!defaultDate) {\n                options.defaultDate = false;\n                return picker;\n            }\n\n            if (typeof defaultDate === 'string') {\n                if (defaultDate === 'now' || defaultDate === 'moment') {\n                    defaultDate = getMoment();\n                } else {\n                    defaultDate = getMoment(defaultDate);\n                }\n            }\n\n            var parsedDate = parseInputDate(defaultDate);\n            if (!parsedDate.isValid()) {\n                throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);\n            }\n            if (!isValid(parsedDate)) {\n                throw new TypeError('defaultDate() date passed is invalid according to component setup validations');\n            }\n\n            options.defaultDate = parsedDate;\n\n            if ((options.defaultDate && options.inline) || input.val().trim() === '') {\n                setValue(options.defaultDate);\n            }\n            return picker;\n        };\n\n        picker.locale = function (locale) {\n            if (arguments.length === 0) {\n                return options.locale;\n            }\n\n            if (!moment.localeData(locale)) {\n                throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');\n            }\n\n            options.locale = locale;\n            date.locale(options.locale);\n            viewDate.locale(options.locale);\n\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.stepping = function (stepping) {\n            if (arguments.length === 0) {\n                return options.stepping;\n            }\n\n            stepping = parseInt(stepping, 10);\n            if (isNaN(stepping) || stepping < 1) {\n                stepping = 1;\n            }\n            options.stepping = stepping;\n            return picker;\n        };\n\n        picker.useCurrent = function (useCurrent) {\n            var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];\n            if (arguments.length === 0) {\n                return options.useCurrent;\n            }\n\n            if ((typeof useCurrent !== 'boolean') && (typeof useCurrent !== 'string')) {\n                throw new TypeError('useCurrent() expects a boolean or string parameter');\n            }\n            if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {\n                throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));\n            }\n            options.useCurrent = useCurrent;\n            return picker;\n        };\n\n        picker.collapse = function (collapse) {\n            if (arguments.length === 0) {\n                return options.collapse;\n            }\n\n            if (typeof collapse !== 'boolean') {\n                throw new TypeError('collapse() expects a boolean parameter');\n            }\n            if (options.collapse === collapse) {\n                return picker;\n            }\n            options.collapse = collapse;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.icons = function (icons) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.icons);\n            }\n\n            if (!(icons instanceof Object)) {\n                throw new TypeError('icons() expects parameter to be an Object');\n            }\n            $.extend(options.icons, icons);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.tooltips = function (tooltips) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.tooltips);\n            }\n\n            if (!(tooltips instanceof Object)) {\n                throw new TypeError('tooltips() expects parameter to be an Object');\n            }\n            $.extend(options.tooltips, tooltips);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.useStrict = function (useStrict) {\n            if (arguments.length === 0) {\n                return options.useStrict;\n            }\n\n            if (typeof useStrict !== 'boolean') {\n                throw new TypeError('useStrict() expects a boolean parameter');\n            }\n            options.useStrict = useStrict;\n            return picker;\n        };\n\n        picker.sideBySide = function (sideBySide) {\n            if (arguments.length === 0) {\n                return options.sideBySide;\n            }\n\n            if (typeof sideBySide !== 'boolean') {\n                throw new TypeError('sideBySide() expects a boolean parameter');\n            }\n            options.sideBySide = sideBySide;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.viewMode = function (viewMode) {\n            if (arguments.length === 0) {\n                return options.viewMode;\n            }\n\n            if (typeof viewMode !== 'string') {\n                throw new TypeError('viewMode() expects a string parameter');\n            }\n\n            if (viewModes.indexOf(viewMode) === -1) {\n                throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');\n            }\n\n            options.viewMode = viewMode;\n            currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);\n\n            showMode();\n            return picker;\n        };\n\n        picker.toolbarPlacement = function (toolbarPlacement) {\n            if (arguments.length === 0) {\n                return options.toolbarPlacement;\n            }\n\n            if (typeof toolbarPlacement !== 'string') {\n                throw new TypeError('toolbarPlacement() expects a string parameter');\n            }\n            if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {\n                throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');\n            }\n            options.toolbarPlacement = toolbarPlacement;\n\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetPositioning = function (widgetPositioning) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.widgetPositioning);\n            }\n\n            if (({}).toString.call(widgetPositioning) !== '[object Object]') {\n                throw new TypeError('widgetPositioning() expects an object variable');\n            }\n            if (widgetPositioning.horizontal) {\n                if (typeof widgetPositioning.horizontal !== 'string') {\n                    throw new TypeError('widgetPositioning() horizontal variable must be a string');\n                }\n                widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();\n                if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {\n                    throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.horizontal = widgetPositioning.horizontal;\n            }\n            if (widgetPositioning.vertical) {\n                if (typeof widgetPositioning.vertical !== 'string') {\n                    throw new TypeError('widgetPositioning() vertical variable must be a string');\n                }\n                widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();\n                if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {\n                    throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.vertical = widgetPositioning.vertical;\n            }\n            update();\n            return picker;\n        };\n\n        picker.calendarWeeks = function (calendarWeeks) {\n            if (arguments.length === 0) {\n                return options.calendarWeeks;\n            }\n\n            if (typeof calendarWeeks !== 'boolean') {\n                throw new TypeError('calendarWeeks() expects parameter to be a boolean value');\n            }\n\n            options.calendarWeeks = calendarWeeks;\n            update();\n            return picker;\n        };\n\n        picker.showTodayButton = function (showTodayButton) {\n            if (arguments.length === 0) {\n                return options.showTodayButton;\n            }\n\n            if (typeof showTodayButton !== 'boolean') {\n                throw new TypeError('showTodayButton() expects a boolean parameter');\n            }\n\n            options.showTodayButton = showTodayButton;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.showClear = function (showClear) {\n            if (arguments.length === 0) {\n                return options.showClear;\n            }\n\n            if (typeof showClear !== 'boolean') {\n                throw new TypeError('showClear() expects a boolean parameter');\n            }\n\n            options.showClear = showClear;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetParent = function (widgetParent) {\n            if (arguments.length === 0) {\n                return options.widgetParent;\n            }\n\n            if (typeof widgetParent === 'string') {\n                widgetParent = $(widgetParent);\n            }\n\n            if (widgetParent !== null && (typeof widgetParent !== 'string' && !(widgetParent instanceof $))) {\n                throw new TypeError('widgetParent() expects a string or a jQuery object parameter');\n            }\n\n            options.widgetParent = widgetParent;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.keepOpen = function (keepOpen) {\n            if (arguments.length === 0) {\n                return options.keepOpen;\n            }\n\n            if (typeof keepOpen !== 'boolean') {\n                throw new TypeError('keepOpen() expects a boolean parameter');\n            }\n\n            options.keepOpen = keepOpen;\n            return picker;\n        };\n\n        picker.focusOnShow = function (focusOnShow) {\n            if (arguments.length === 0) {\n                return options.focusOnShow;\n            }\n\n            if (typeof focusOnShow !== 'boolean') {\n                throw new TypeError('focusOnShow() expects a boolean parameter');\n            }\n\n            options.focusOnShow = focusOnShow;\n            return picker;\n        };\n\n        picker.inline = function (inline) {\n            if (arguments.length === 0) {\n                return options.inline;\n            }\n\n            if (typeof inline !== 'boolean') {\n                throw new TypeError('inline() expects a boolean parameter');\n            }\n\n            options.inline = inline;\n            return picker;\n        };\n\n        picker.clear = function () {\n            clear();\n            return picker;\n        };\n\n        picker.keyBinds = function (keyBinds) {\n            if (arguments.length === 0) {\n                return options.keyBinds;\n            }\n\n            options.keyBinds = keyBinds;\n            return picker;\n        };\n\n        picker.getMoment = function (d) {\n            return getMoment(d);\n        };\n\n        picker.debug = function (debug) {\n            if (typeof debug !== 'boolean') {\n                throw new TypeError('debug() expects a boolean parameter');\n            }\n\n            options.debug = debug;\n            return picker;\n        };\n\n        picker.allowInputToggle = function (allowInputToggle) {\n            if (arguments.length === 0) {\n                return options.allowInputToggle;\n            }\n\n            if (typeof allowInputToggle !== 'boolean') {\n                throw new TypeError('allowInputToggle() expects a boolean parameter');\n            }\n\n            options.allowInputToggle = allowInputToggle;\n            return picker;\n        };\n\n        picker.showClose = function (showClose) {\n            if (arguments.length === 0) {\n                return options.showClose;\n            }\n\n            if (typeof showClose !== 'boolean') {\n                throw new TypeError('showClose() expects a boolean parameter');\n            }\n\n            options.showClose = showClose;\n            return picker;\n        };\n\n        picker.keepInvalid = function (keepInvalid) {\n            if (arguments.length === 0) {\n                return options.keepInvalid;\n            }\n\n            if (typeof keepInvalid !== 'boolean') {\n                throw new TypeError('keepInvalid() expects a boolean parameter');\n            }\n            options.keepInvalid = keepInvalid;\n            return picker;\n        };\n\n        picker.datepickerInput = function (datepickerInput) {\n            if (arguments.length === 0) {\n                return options.datepickerInput;\n            }\n\n            if (typeof datepickerInput !== 'string') {\n                throw new TypeError('datepickerInput() expects a string parameter');\n            }\n\n            options.datepickerInput = datepickerInput;\n            return picker;\n        };\n\n        picker.parseInputDate = function (parseInputDate) {\n            if (arguments.length === 0) {\n                return options.parseInputDate;\n            }\n\n            if (typeof parseInputDate !== 'function') {\n                throw new TypeError('parseInputDate() sholud be as function');\n            }\n\n            options.parseInputDate = parseInputDate;\n\n            return picker;\n        };\n\n        picker.disabledTimeIntervals = function (disabledTimeIntervals) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledTimeIntervals\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledTimeIntervals</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledTimeIntervals_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals);\n            }\n\n            if (!disabledTimeIntervals) {\n                options.disabledTimeIntervals = false;\n                update();\n                return picker;\n            }\n            if (!(disabledTimeIntervals instanceof Array)) {\n                throw new TypeError('disabledTimeIntervals() expects an array parameter');\n            }\n            options.disabledTimeIntervals = disabledTimeIntervals;\n            update();\n            return picker;\n        };\n\n        picker.disabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledHours\">\n            ///<summary>Returns an array with the currently set disabled hours on the component.</summary>\n            ///<returns type=\"array\">options.disabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.disabledHours_p:hours\">Takes an [ int ] of values and disallows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours);\n            }\n\n            if (!hours) {\n                options.disabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('disabledHours() expects an array parameter');\n            }\n            options.disabledHours = indexGivenHours(hours);\n            options.enabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.enabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledHours\">\n            ///<summary>Returns an array with the currently set enabled hours on the component.</summary>\n            ///<returns type=\"array\">options.enabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.enabledHours_p:hours\">Takes an [ int ] of values and allows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours);\n            }\n\n            if (!hours) {\n                options.enabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('enabledHours() expects an array parameter');\n            }\n            options.enabledHours = indexGivenHours(hours);\n            options.disabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n        /**\n         * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.\n         * @param {Takes string, viewDate, moment, null parameter.} newDate\n         * @returns {viewDate.clone()}\n         */\n        picker.viewDate = function (newDate) {\n            if (arguments.length === 0) {\n                return viewDate.clone();\n            }\n\n            if (!newDate) {\n                viewDate = date.clone();\n                return picker;\n            }\n\n            if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');\n            }\n\n            viewDate = parseInputDate(newDate);\n            viewUpdate();\n            return picker;\n        };\n\n        // initializing element and component attributes\n        if (element.is('input')) {\n            input = element;\n        } else {\n            input = element.find(options.datepickerInput);\n            if (input.length === 0) {\n                input = element.find('input');\n            } else if (!input.is('input')) {\n                throw new Error('CSS class \"' + options.datepickerInput + '\" cannot be applied to non input element');\n            }\n        }\n\n        if (element.hasClass('input-group')) {\n            // in case there is more then one 'input-group-addon' Issue #48\n            if (element.find('.datepickerbutton').length === 0) {\n                component = element.find('.input-group-addon');\n            } else {\n                component = element.find('.datepickerbutton');\n            }\n        }\n\n        if (!options.inline && !input.is('input')) {\n            throw new Error('Could not initialize DateTimePicker without an input element');\n        }\n\n        // Set defaults for date here now instead of in var declaration\n        date = getMoment();\n        viewDate = date.clone();\n\n        $.extend(true, options, dataToOptions());\n\n        picker.options(options);\n\n        initFormatting();\n\n        attachDatePickerElementEvents();\n\n        if (input.prop('disabled')) {\n            picker.disable();\n        }\n        if (input.is('input') && input.val().trim().length !== 0) {\n            setValue(parseInputDate(input.val().trim()));\n        }\n        else if (options.defaultDate && input.attr('placeholder') === undefined) {\n            setValue(options.defaultDate);\n        }\n        if (options.inline) {\n            show();\n        }\n        return picker;\n    };\n\n    $.fn.datetimepicker = function (options) {\n        options = options || {};\n\n        var args = Array.prototype.slice.call(arguments, 1),\n            isInstance = true,\n            thisMethods = ['destroy', 'hide', 'show', 'toggle'],\n            returnValue;\n\n        if (typeof options === 'object') {\n            return this.each(function () {\n                var $this = $(this),\n                    _options;\n                if (!$this.data('DateTimePicker')) {\n                    // create a private copy of the defaults object\n                    _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);\n                    $this.data('DateTimePicker', DateTimePicker($this, _options));\n                }\n            });\n        } else if (typeof options === 'string') {\n            this.each(function () {\n                var $this = $(this),\n                    instance = $this.data('DateTimePicker');\n                if (!instance) {\n                    throw new Error('bootstrap-datetimepicker(\"' + options + '\") method was called on an element that is not using DateTimePicker');\n                }\n\n                returnValue = instance[options].apply(instance, args);\n                isInstance = returnValue === instance;\n            });\n\n            if (isInstance || $.inArray(options, thisMethods) > -1) {\n                return this;\n            }\n\n            return returnValue;\n        }\n\n        throw new TypeError('Invalid arguments for DateTimePicker: ' + options);\n    };\n\n    $.fn.datetimepicker.defaults = {\n        timeZone: '',\n        format: false,\n        dayViewHeaderFormat: 'MMMM YYYY',\n        extraFormats: false,\n        stepping: 1,\n        minDate: false,\n        maxDate: false,\n        useCurrent: true,\n        collapse: true,\n        locale: moment.locale(),\n        defaultDate: false,\n        disabledDates: false,\n        enabledDates: false,\n        icons: {\n            time: 'glyphicon glyphicon-time',\n            date: 'glyphicon glyphicon-calendar',\n            up: 'glyphicon glyphicon-chevron-up',\n            down: 'glyphicon glyphicon-chevron-down',\n            previous: 'glyphicon glyphicon-chevron-left',\n            next: 'glyphicon glyphicon-chevron-right',\n            today: 'glyphicon glyphicon-screenshot',\n            clear: 'glyphicon glyphicon-trash',\n            close: 'glyphicon glyphicon-remove'\n        },\n        tooltips: {\n            today: 'Go to today',\n            clear: 'Clear selection',\n            close: 'Close the picker',\n            selectMonth: 'Select Month',\n            prevMonth: 'Previous Month',\n            nextMonth: 'Next Month',\n            selectYear: 'Select Year',\n            prevYear: 'Previous Year',\n            nextYear: 'Next Year',\n            selectDecade: 'Select Decade',\n            prevDecade: 'Previous Decade',\n            nextDecade: 'Next Decade',\n            prevCentury: 'Previous Century',\n            nextCentury: 'Next Century',\n            pickHour: 'Pick Hour',\n            incrementHour: 'Increment Hour',\n            decrementHour: 'Decrement Hour',\n            pickMinute: 'Pick Minute',\n            incrementMinute: 'Increment Minute',\n            decrementMinute: 'Decrement Minute',\n            pickSecond: 'Pick Second',\n            incrementSecond: 'Increment Second',\n            decrementSecond: 'Decrement Second',\n            togglePeriod: 'Toggle Period',\n            selectTime: 'Select Time'\n        },\n        useStrict: false,\n        sideBySide: false,\n        daysOfWeekDisabled: false,\n        calendarWeeks: false,\n        viewMode: 'days',\n        toolbarPlacement: 'default',\n        showTodayButton: false,\n        showClear: false,\n        showClose: false,\n        widgetPositioning: {\n            horizontal: 'auto',\n            vertical: 'auto'\n        },\n        widgetParent: null,\n        ignoreReadonly: false,\n        keepOpen: false,\n        focusOnShow: true,\n        inline: false,\n        keepInvalid: false,\n        datepickerInput: '.datepickerinput',\n        keyBinds: {\n            up: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(7, 'd'));\n                } else {\n                    this.date(d.clone().add(this.stepping(), 'm'));\n                }\n            },\n            down: function (widget) {\n                if (!widget) {\n                    this.show();\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(7, 'd'));\n                } else {\n                    this.date(d.clone().subtract(this.stepping(), 'm'));\n                }\n            },\n            'control up': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'y'));\n                } else {\n                    this.date(d.clone().add(1, 'h'));\n                }\n            },\n            'control down': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'y'));\n                } else {\n                    this.date(d.clone().subtract(1, 'h'));\n                }\n            },\n            left: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'd'));\n                }\n            },\n            right: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'd'));\n                }\n            },\n            pageUp: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'M'));\n                }\n            },\n            pageDown: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'M'));\n                }\n            },\n            enter: function () {\n                this.hide();\n            },\n            escape: function () {\n                this.hide();\n            },\n            //tab: function (widget) { //this break the flow of the form. disabling for now\n            //    var toggle = widget.find('.picker-switch a[data-action=\"togglePicker\"]');\n            //    if(toggle.length > 0) toggle.click();\n            //},\n            'control space': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                if (widget.find('.timepicker').is(':visible')) {\n                    widget.find('.btn[data-action=\"togglePeriod\"]').click();\n                }\n            },\n            t: function () {\n                this.date(this.getMoment());\n            },\n            'delete': function () {\n                this.clear();\n            }\n        },\n        debug: false,\n        allowInputToggle: false,\n        disabledTimeIntervals: false,\n        disabledHours: false,\n        enabledHours: false,\n        viewDate: false\n    };\n\n    $.fn.datetimepicker.DateTimePicker = DateTimePicker;\n\n    return skylark.attach(\"intg.datetimepicker\", $.fn.datetimepicker);\n});\n\ndefine('skylark-bootstrap-datatimepicker/main',[\"./datetimepicker\"],function(datetimepicker){\r\n\treturn datetimepicker;\r\n});\ndefine('skylark-bootstrap-datatimepicker', ['skylark-bootstrap-datatimepicker/main'], function (main) { return main; });\n\n"]}